services:
  #################
  ## VLLM Server ##
  #################
  vllm_openai:
    image: vllm/vllm-openai:v0.7.0
    environment:
      HF_DATASETS_OFFLINE: '1'
      HF_HUB_OFFLINE: '1'
      TRANSFORMERS_OFFLINE: '1'
      NCCL_DEBUG: INFO
      ENABLE_VLLM_HEALTH_CHECK: 'true'
    volumes:
      - /home/ubuntu/.cache/:/root/.cache/
      - type: tmpfs
        target: /dev/shm
        tmpfs:
          size: 644245094400 # 600 GB
    ports:
      - published: 1337
        target: 8000
        protocol: tcp
        mode: ingress
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 360s
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 8
              capabilities: [gpu]      
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 300s
    entrypoint: [ "python3", "-m", "vllm.entrypoints.openai.api_server" ]
    command:
      - --model
      - /root/.cache/models--meta-llama--Llama-3.3-70B-Instruct/snapshots/6f6073b423013f6a7d4d9f39144961bfbfbc386b
      - --swap-space
      - "16"
      - --disable-log-requests
      - --max_model_len
      - "128000"
      - --tensor-parallel-size
      - "8"

  ###############
  ## VLLM Chat ##
  ###############
  chat:
    image: ghcr.io/yoziru/nextjs-vllm-ui:latest
    environment:
      - VLLM_URL=http://89.169.97.156:1337
      - VLLM_TOKEN_LIMIT=128000
    ports:
      - "3000:3000"
    restart: always

  ##############
  ## Database ##
  ##############
  mongo-db:
    container_name: mongo-db
    restart: unless-stopped
    image: mongo
    volumes:
      - mongodbdata:/data/db
      - mongoconfigdbdata:/data/configdb
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}

  #################
  ## Database UI ##
  #################
  mongo-express:
    container_name: mongo-express
    restart: unless-stopped
    image: mongo-express
    ports:
      - 8081:8081
    depends_on:
      - mongo-db
    environment:
      # MongoDB Access config
      ME_CONFIG_MONGODB_URL: "mongodb://${MONGODB_ROOT_USER}:${MONGODB_ROOT_PASSWORD}@mongo-db:27017/"
      ME_CONFIG_MONGODB_SERVER: mongo-db
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin # Database name
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_ROOT_USER} # MongoDB root username
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_ROOT_PASSWORD} # MongoDB root password

      # Admin access to all databases (access local and config databases, as well as server status)
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true # Enable admin access to all databases

      # Basic authentication
      ME_CONFIG_BASICAUTH: true
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGOEXPRESS_LOGIN_USERNAME} # mongo-express web username
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGOEXPRESS_LOGIN_PASSWORD} # mongo-express web password

      # Extras
      ME_CONFIG_OPTIONS_EDITORTHEME: default # mongo-express editor color theme, http://codemirror.net/demo/theme.html

  #################
  ## FastAPI API ##
  #################
  fastapi:
    container_name: fastapi
    restart: unless-stopped
    build:
      context: .
      dockerfile: fastapi.dockerfile
    ports:
      - 8080:8080
    depends_on:
      - mongo-db
    environment:
      MONGODB_ROOT_USER: ${MONGODB_ROOT_USER}
      MONGODB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}
      MONGODB_HOST: mongo-db
      MONGODB_PORT: 27017
    volumes:
      - ./src/backend:/app

  ######################
  ## Vite Application ##
  ######################
  vite:
    container_name: vite
    restart: unless-stopped
    network_mode: host
    build:
      context: .
      dockerfile: vite.dockerfile
    depends_on:
      - fastapi
    # volumes:
      # - ./src/frontend:/app

volumes:
  mongodbdata:
    name: "mongodb-data"
  mongoconfigdbdata:
    name: "mongodb-configdata"